
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import os
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
import sys
import threading
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
OUTPUT_PATH = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ASSETS_PATH = os.path.join(OUTPUT_PATH, "GUI\\assets\\frame2")

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)
class Admin:
    def __init__(self):
        self.window = Tk()
        self.window.title("Admin Panel")
        self.window.geometry("1000x700")
        self.window.configure(bg = "#FFFFFF")


        self.canvas = Canvas(
            self.window,
            bg = "#FFFFFF",
            height = 700,
            width = 1000,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            0.0,
            0.0,
            237.0,
            700.0,
            fill="#292929",
            outline="")

        self.canvas.create_rectangle(
            237.0,
            0.0,
            1000.0,
            48.0,
            fill="#B4B4B4",
            outline="")

        self.logo_image = PhotoImage(file=relative_to_assets("Hub.png"))
        self.logo_image_resized = self.logo_image.subsample(3, 3)
        self.logo_image_1 = self.canvas.create_image(
            30.0,
            27.0,
            image=self.logo_image_resized)

        self.canvas.create_text(
            52.0,
            19.0,
            anchor="nw",
            text="HarmonyHub ",
            fill="#FFFFFF",
            font=("Inter ExtraBold", 16 * -1,"bold")
        )
        #Line
        self.canvas.create_rectangle(
            0.5,
            48.0,
            237.5,
            48.0,
            fill="#FFFFFF",
            outline="")

        self.admin_icon = PhotoImage(file=relative_to_assets("admin.png"))
        self.admin_icon_1=self.canvas.create_image(
            939.0,
            27.0,
            image=self.admin_icon
            )

        self.canvas.create_text(
            797.0,
            17.0,
            anchor="nw",
            text="Hello Admin",
            fill="#FFFFFF",
            font=("Inter ExtraBold", 20 * -1)
        )
        #Albums
        self.canvas.create_text(
            70.0,
            88.0,
            anchor="nw",
            text="Albums",
            fill="#FFFFFF",
            font=("Inter", 24 * -1,"bold"),
            tags="album_text"
        )
        #Users
        self.canvas.create_text(
            72.0,
            337.0,
            anchor="nw",
            text="Users",
            fill="#FFFFFF",
            font=("Inter", 24 * -1,"bold"),
            tag="user_text"
        )
        #Tracks
        self.canvas.create_text(
            70.0,
            171.0,
            anchor="nw",
            text="Tracks",
            fill="#FFFFFF",
            font=("Inter", 24 * -1,"bold"),
            tag="track_text"
        )
        #Artists
        self.canvas.create_text(
            70.0,
            254.0,
            anchor="nw",
            text="Artists",
            fill="#FFFFFF",
            font=("Inter", 24 * -1,"bold"),
            tag="artist_text"
        )
        #Shut Down button
        self.shut_down_icon = PhotoImage(file=relative_to_assets("Shutdown.png"))
        self.shut_down_button=Button(   
            image=self.shut_down_icon,
            relief="flat",
            borderwidth=0,
            background="#2A2A2A",
            activebackground="#2A2A2A",
            command=lambda: print("Shutdown clicked"),
            )
        self.shut_down_button.place(
            x=83.0,
            y=631.0,
            width=80.0,
            height=60.0,)

        #Live button
        self.live_icon = PhotoImage(file=relative_to_assets("Live.png"))
        self.live_icon_1=Button(
            image=self.live_icon,
            command=lambda: print("Live clicked"),
            relief="flat",
            borderwidth=0,
            background="#FFFFFF",
            activebackground="#FFFFFF",
            
            )
        self.live_icon_1.place(
            x=920.0,
            y=630.0,
            width=60,
            height=42
        )

        self.canvas.create_text(
            778.0,
            639.0,
            anchor="nw",
            text="Server Offline",
            fill="#000000",
            font=("Inter ExtraBold", 20 * -1,"bold")
        )
        #Add Album button
        self.add_album_button = Button(
            background="#4394AE",
            text="Add Albums",
            font=("Inter Medium", 20 * -1,"bold"),
            fg="#FFFFFF",
            relief="flat",
            activebackground="#4394AE",
            activeforeground="#FFFFFF",
        )

        self.add_album_button.place(
            x=780.0,
            y=70.0,
            width=174.0,
            height=43.0,
            )
        #Decorative 
        self.canvas.create_rectangle(
            40.0,
            453.9756164550781,
            204.0,
            454.999999998603,
            fill="#FFFFFF",
            outline="")
        self.medal_icon = PhotoImage(file=relative_to_assets("medal.png"))
        self.medal_icon_1=self.canvas.create_image(
            120.0,
            485.0,
            image=self.medal_icon
            )
        #Table
        self.album_id =[1,2,3,4,5]
        self.title = ["Album 1","Album 2","Album 3","Album 4","Album 5"]
        self.artist_id = [1,2,3,4,5]
        self.genre = ["Pop","Rock","Jazz","Blues","Country"]
        self.release_date = ["2021-01-01","2021-01-02","2021-01-03","2021-01-04","2021-01-05"]

        self.album_table = ttk.Treeview(self.window, columns=("Album ID","Title", "Artist ID", "Genre", "Release Date","Action"), show='headings')
        self.album_table.heading("Album ID", text="Album ID")
        self.album_table.heading("Title", text="Title")
        self.album_table.heading("Artist ID", text="Artist ID")
        self.album_table.heading("Genre", text="Genre")
        self.album_table.heading("Release Date", text="Release Date")
        self.album_table.heading("Action", text="Action")

        self.album_table.column("Album ID", width=100, anchor='center')
        self.album_table.column("Title", width=100, anchor='center')
        self.album_table.column("Artist ID", width=100, anchor='center')
        self.album_table.column("Genre", width=100, anchor='center')
        self.album_table.column("Release Date", width=100, anchor='center')
        self.album_table.column("Action", width=100, anchor='center')

        self.album_table.insert("", "end", values=(self.album_id[0], self.title[0], self.artist_id[0], self.genre[0], self.release_date[0],"Edit"))
        self.album_table.insert("", "end", values=(self.album_id[1], self.title[1], self.artist_id[1], self.genre[1], self.release_date[1],"Edit"))
        self.album_table.insert("", "end", values=(self.album_id[2], self.title[2], self.artist_id[2], self.genre[2], self.release_date[2],"Edit"))
        self.album_table.insert("", "end", values=(self.album_id[3], self.title[3], self.artist_id[3], self.genre[3], self.release_date[3],"Edit"))
        self.album_table.insert("", "end", values=(self.album_id[4], self.title[4], self.artist_id[4], self.genre[4], self.release_date[4],"Edit"))
            
        self.album_table.place(
            x=285.0,
            y=140.0,
            width=665.0,
            height=480.0
            )
    def run(self):
        self.window.resizable(False, False)
        self.window.mainloop()
        
if __name__ == "__main__":
    admin = Admin()
    admin.run()